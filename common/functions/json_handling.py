from numpy import size
from setproc.common.functions.data_handling import colarray

def json_data(jsonobject, i, column) :
    """
    Given a json object generated by NanoQt, it extracts the column of a the data nbr i
    """
    try :
        data_temp = jsonobject["measures"][i]["data"]
    except :
        print "Problem using data_json function"

    if type(column) == str:
        try :
            column = getposcolumn(data_temp, column)
        except :
            print "There is not such a column name, taking column = 1"
            column = 1
    temp = []

    for j in range(len(data_temp)):
        temp.append(data_temp[j][column-1])

    return temp


def getposcolumn(data, string):
    """
    This function allows to obtain the column number in a json file sweep given the name of the input
    """
    result = 0
    for i in range(size(data["measures"][0]["columns"])) :
        if(data["measures"][0]["columns"][i] == string) :
            result = i+1
    return result


def getinputs(data):
    """
    This function give the inputs used for a measurement given the corresponding json file.
    """
    inputs = data["inputs"]
    result = []
    for x in inputs:
        result.append(str(data["inputs"][x]["name"]).replace("u", ""))
    return result


def getoutputs(data):
    """
    This function give the outputs used for a measurement given the corresponding json file.
    """
    inputs = data["outputs"]
    result = []
    for x in inputs:
        result.append(str(data["outputs"][x]["name"]).replace("u", ""))
    return result

def getcolumns(data, col_num, sweep_num):
    """
    This function allows to access to one column of a json file sweep given the sweep and the column numbers.
    """
    result = []
    for i in range(sweep_num):
        result.append(colarray(data["measures"][i]["data"], col_num , 0))
    return result

